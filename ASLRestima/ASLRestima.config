# Set up memory segments we are focusing on

declare -a types=("heap" "text" "stack" "mmap" "vdso" "libso" )

# Capital types are used for labeling 
declare -A capitalTypes=( ["heap"]="Heap" ["text"]="Text" ["stack"]="Stack" ["mmap"]="Mmap" ["vdso"]="Vdso" ["libso"]="Libso" )

# Only specific bits are randomized. We only want to consider those when calculating statistics.
declare -A startPos=( ["heap"]=16 ["text"]=16 ["stack"]=24 ["mmap"]=17 ["vdso"]=24 ["libso"]=17 )
declare -A lengths=( ["heap"]=30 ["text"]=30 ["stack"]=30 ["mmap"]=29 ["vdso"]=22 ["libso"]=29 )

# Various files are generated for each memory segment
declare -A binaryFiles=( ["heap"]="" ["text"]="" ["stack"]="" ["mmap"]="" ["vdso"]="" ["libso"]="" )
declare -A findAddress=( ["heap"]="" ["text"]="" ["stack"]="" ["mmap"]="" ["vdso"]="" ["libso"]="" )
for i in "${types[@]}"
do
    binaryFiles[$i]="${i}Binary.txt"
    findAddress[$i]="${i}_entropy"
done

# Parameters
OPSYSTEM="Debian"
NUMBEROFBINS="20"     # In the histogram
ITERATIONS=800 	      # Times that the different mem segments are analyzed
SUPPRESSPLOTS=true    # Should the plots be suppressed when you're running the program?
CLEANUP=false         # When true, run "make superclean" before starting, and delete all intermediate files at the end.

# Output Files
LOGFILENAME=ASLRestima.log
REPORTFILENAME=ASLRestimaReport.rpt



